"""
Autogenerated input type of CreateDailyComment
"""
input CreateDailyCommentInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  reportDate: ISO8601Date!
  userId: ID!
}

"""
Autogenerated return type of CreateDailyComment
"""
type CreateDailyCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dailyComment: DailyComment!
}

"""
Autogenerated input type of CreateDailyInputs
"""
input CreateDailyInputsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  objects: [DailyInputAttributes!]!
}

"""
Autogenerated return type of CreateDailyInputs
"""
type CreateDailyInputsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dailyInputs: [DailyInput!]!
}

"""
Autogenerated input type of CreateMonthlyTargets
"""
input CreateMonthlyTargetsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  objects: [MonthlyTargetAttributes!]!
}

"""
Autogenerated return type of CreateMonthlyTargets
"""
type CreateMonthlyTargetsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  monthlyTargets: [MonthlyTarget!]!
}

type DailyComment {
  body: String!
  createdAt: ISO8601DateTime!
  id: ID!
  reportDate: ISO8601Date!
  updatedAt: ISO8601DateTime!
  user: User!
}

type DailyInput {
  createdAt: ISO8601DateTime!
  dailyInputVersions: [DailyInputVersion!]!
  id: ID!
  reportDate: ISO8601Date!
  reportItem: ReportItem!
  reportValue: Int!
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
Attributes for creating or updating a DailyInput
"""
input DailyInputAttributes {
  """
  Reporting date
  """
  reportDate: ISO8601Date!

  """
  ReportItem ID
  """
  reportItemId: ID!

  """
  Reporting value
  """
  reportValue: Int!

  """
  User ID
  """
  userId: ID!
}

type DailyInputVersion {
  changeset: JSON!
  createdAt: ISO8601DateTime!
  dailyInput: DailyInput!
  event: String!
  id: ID!
  user: User!
}

enum DisplayTypeEnum {
  number
  percentage
}

type Group {
  createdAt: ISO8601DateTime!
  fridayIsDayOff: Boolean!
  hasDayOffSettings: Boolean!
  id: ID!
  mondayIsDayOff: Boolean!
  name: String!
  publicHolidayIsDayOff: Boolean!
  reportItems: [ReportItem!]
  saturdayIsDayOff: Boolean!
  sundayIsDayOff: Boolean!
  thursdayIsDayOff: Boolean!
  tuesdayIsDayOff: Boolean!
  updatedAt: ISO8601DateTime!
  users: [User!]
  wednesdayIsDayOff: Boolean!
}

"""
Attributes for updating a Group
"""
input GroupAttributes {
  fridayIsDayOff: Boolean
  hasDayOffSettings: Boolean

  """
  Group ID
  """
  id: ID!
  mondayIsDayOff: Boolean

  """
  Group name
  """
  name: String
  publicHolidayIsDayOff: Boolean
  saturdayIsDayOff: Boolean
  sundayIsDayOff: Boolean
  thursdayIsDayOff: Boolean
  tuesdayIsDayOff: Boolean
  wednesdayIsDayOff: Boolean
}

type GroupBusinessDay {
  date: ISO8601Date!
  isDayOff: Boolean!
  note: String
}

type GroupDailyReport {
  dailyTargetValues: JSON!
  forecastValues: JSON!
  groups: [Group!]!
  reportDates: [ISO8601Date!]!
  reportItems: [ReportItem!]!
  reportValues: JSON!
  targetValues: JSON!
}

type GroupDayOff {
  createdAt: ISO8601DateTime!
  group: Group!
  id: ID!
  isDayOff: Boolean!
  note: String
  reportDate: ISO8601Date!
  updatedAt: ISO8601DateTime!
}

"""
Attributes for creating or updating a GroupDayOff
"""
input GroupDayOffAttributes {
  """
  Group ID
  """
  groupId: ID!

  """
  Is day off
  """
  isDayOff: Boolean!

  """
  Note
  """
  note: String

  """
  Reporting date
  """
  reportDate: ISO8601Date!
}

type GroupMonthlyReport {
  forecastValues: JSON!
  groups: [Group!]!
  reportDates: [ISO8601Date!]!
  reportItems: [ReportItem!]!
  reportValues: JSON!
  targetValues: JSON!
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Represents untyped JSON
"""
scalar JSON

type MonthlySetting {
  conversionRateOpportunity: Float!
  conversionRateRankA: Float!
  conversionRateRankB: Float!
  conversionRateRankC: Float!
  conversionRateRankD: Float!
  conversionRateRankE: Float!
  createdAt: ISO8601DateTime!
  group: Group!
  id: ID!
  targetYearMonth: ISO8601Date!
  unitContractPrice: Int!
  updatedAt: ISO8601DateTime!
}

"""
Attributes for creating or updating MonthlySettings
"""
input MonthlySettingAttributes {
  """
  Conversion rate opportunity
  """
  conversionRateOpportunity: Float!

  """
  Conversion rate rank A
  """
  conversionRateRankA: Float!

  """
  Conversion rate rank B
  """
  conversionRateRankB: Float!

  """
  Conversion rate rank C
  """
  conversionRateRankC: Float!

  """
  Conversion rate rank D
  """
  conversionRateRankD: Float!

  """
  Conversion rate rank E
  """
  conversionRateRankE: Float!

  """
  Group ID
  """
  groupId: ID!

  """
  Target month
  """
  targetMonth: Int!

  """
  Target year
  """
  targetYear: Int!

  """
  Unit contract price
  """
  unitContractPrice: Int!
}

type MonthlyTarget {
  createdAt: ISO8601DateTime!
  id: ID!
  reportItem: ReportItem!
  targetValue: Int!
  targetYearMonth: ISO8601Date!
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
Attributes for creating or updating a MonthlyTarget
"""
input MonthlyTargetAttributes {
  """
  ReportItem ID
  """
  reportItemId: ID!

  """
  Target month
  """
  targetMonth: Int!

  """
  Target value
  """
  targetValue: Int!

  """
  Target year
  """
  targetYear: Int!

  """
  User ID
  """
  userId: ID!
}

type Mutation {
  createDailyComment(
    """
    Parameters for CreateDailyComment
    """
    input: CreateDailyCommentInput!
  ): CreateDailyCommentPayload
  createDailyInputs(
    """
    Parameters for CreateDailyInputs
    """
    input: CreateDailyInputsInput!
  ): CreateDailyInputsPayload
  createMonthlyTargets(
    """
    Parameters for CreateMonthlyTargets
    """
    input: CreateMonthlyTargetsInput!
  ): CreateMonthlyTargetsPayload
  updateDailyComment(
    """
    Parameters for UpdateDailyComment
    """
    input: UpdateDailyCommentInput!
  ): UpdateDailyCommentPayload
  updateDailyInputs(
    """
    Parameters for UpdateDailyInputs
    """
    input: UpdateDailyInputsInput!
  ): UpdateDailyInputsPayload
  updateGroup(
    """
    Parameters for UpdateGroup
    """
    input: UpdateGroupInput!
  ): UpdateGroupPayload
  updateGroupDayOffs(
    """
    Parameters for UpdateGroupDayOffs
    """
    input: UpdateGroupDayOffsInput!
  ): UpdateGroupDayOffsPayload
  updateMonthlySetting(
    """
    Parameters for UpdateMonthlySetting
    """
    input: UpdateMonthlySettingInput!
  ): UpdateMonthlySettingPayload
  updateMonthlyTargets(
    """
    Parameters for UpdateMonthlyTargets
    """
    input: UpdateMonthlyTargetsInput!
  ): UpdateMonthlyTargetsPayload
  updateReportItems(
    """
    Parameters for UpdateReportItems
    """
    input: UpdateReportItemsInput!
  ): UpdateReportItemsPayload
  updateUser(
    """
    Parameters for UpdateUser
    """
    input: UpdateUserInput!
  ): UpdateUserPayload
  updateUserDayOffs(
    """
    Parameters for UpdateUserDayOffs
    """
    input: UpdateUserDayOffsInput!
  ): UpdateUserDayOffsPayload
}

type Query {
  """
  Get DailyComments
  """
  dailyComments(
    """
    Report from date, use with to parameter
    """
    from: ISO8601Date

    """
    Report month, use with year parameter
    """
    month: Int

    """
    Report date
    """
    reportDate: ISO8601Date

    """
    Report dates
    """
    reportDates: [ISO8601Date!]

    """
    Report to date, use with from parameter
    """
    to: ISO8601Date

    """
    User ID
    """
    userId: ID

    """
    User IDs
    """
    userIds: [ID!]

    """
    Report year, use with month parameter
    """
    year: Int
  ): [DailyComment!]!

  """
  Get DailyInputVersions
  """
  dailyInputVersions(
    """
    Report date
    """
    reportDate: ISO8601Date!

    """
    User ID
    """
    userId: ID
  ): [DailyInputVersion!]!

  """
  Get DailyInputs
  """
  dailyInputs(
    """
    Report date
    """
    reportDate: ISO8601Date!

    """
    User ID
    """
    userId: ID
  ): [DailyInput!]!

  """
  Get Group
  """
  group(
    """
    Group ID
    """
    id: ID
  ): Group!

  """
  Get Group Business Days
  """
  groupBusinessDays(
    """
    Target dates
    """
    dates: [ISO8601Date!]

    """
    Target from date, use with to parameter
    """
    from: ISO8601Date

    """
    Group ID
    """
    groupId: ID

    """
    Target month, use with year parameter
    """
    month: Int

    """
    Target to date, use with from parameter
    """
    to: ISO8601Date

    """
    Target year, use with month parameter
    """
    year: Int
  ): [GroupBusinessDay!]!

  """
  Get group's daily report
  """
  groupDailyReport(
    """
    Report target from date, use with to parameter
    """
    from: ISO8601Date

    """
    Group IDs
    """
    groupIds: [ID!]!

    """
    Report target month, use with year parameter
    """
    month: Int

    """
    Report target dates
    """
    reportDates: [ISO8601Date!]

    """
    ReportItem IDs, if not specified return all ReportItems
    """
    reportItemIds: [ID!]

    """
    Report target to date, use with from parameter
    """
    to: ISO8601Date

    """
    Report target year, use with month parameter
    """
    year: Int
  ): GroupDailyReport!

  """
  Get group's monthly report
  """
  groupMonthlyReport(
    """
    From report month
    """
    fromMonth: Int!

    """
    From report year
    """
    fromYear: Int!

    """
    Group IDs
    """
    groupIds: [ID!]!

    """
    ReportItem IDs, if not specified return all ReportItems
    """
    reportItemIds: [ID!]

    """
    To report month
    """
    toMonth: Int!

    """
    To report year
    """
    toYear: Int!
  ): GroupMonthlyReport!

  """
  Get Groups
  """
  groups(
    """
    Company ID
    """
    companyId: ID
  ): [Group!]!

  """
  Get monthly setting
  """
  monthlySetting(
    """
    Group ID
    """
    groupId: ID

    """
    Monthly target month, use with year parameter
    """
    month: Int

    """
    Monthly target year, use with month parameter
    """
    year: Int
  ): MonthlySetting!

  """
  Get monthly targets
  """
  monthlyTargets(
    """
    Group ID
    """
    groupId: ID

    """
    Monthly target month, use with year parameter
    """
    month: Int

    """
    Monthly target year, use with month parameter
    """
    year: Int
  ): [MonthlyTarget!]!

  """
  Get ReportItems
  """
  reportItems(
    """
    Group ID
    """
    groupId: ID
  ): [ReportItem!]!

  """
  List of users who have not entered daily inputs
  """
  unsubmittedUsers(
    """
    Group ID
    """
    groupId: ID

    """
    Report date to filter daily_inputs
    """
    reportDate: ISO8601Date!
  ): [User!]!

  """
  Get User
  """
  user(
    """
    User ID
    """
    id: ID
  ): User!

  """
  Get User Business Days
  """
  userBusinessDays(
    """
    Target dates
    """
    dates: [ISO8601Date!]

    """
    Target from date, use with to parameter
    """
    from: ISO8601Date

    """
    Target month, use with year parameter
    """
    month: Int

    """
    Target to date, use with from parameter
    """
    to: ISO8601Date

    """
    User ID
    """
    userId: ID

    """
    Target year, use with month parameter
    """
    year: Int
  ): [UserBusinessDay!]!

  """
  Get uer's daily report
  """
  userDailyReport(
    """
    Report from date, use with to parameter
    """
    from: ISO8601Date

    """
    Report month, use with year parameter
    """
    month: Int

    """
    Fill null report value with previous day's input, default true
    """
    nullCompletion: Boolean

    """
    Report dates
    """
    reportDates: [ISO8601Date!]

    """
    ReportItem IDs, if not specified return all ReportItems
    """
    reportItemIds: [ID!]

    """
    Report to date, use with from parameter
    """
    to: ISO8601Date

    """
    User IDs
    """
    userIds: [ID!]!

    """
    Report year, use with month parameter
    """
    year: Int
  ): UserDailyReport!

  """
  Get uer's monthly report
  """
  userMonthlyReport(
    """
    From report month
    """
    fromMonth: Int!

    """
    From report year
    """
    fromYear: Int!

    """
    ReportItem IDs, if not specified return all ReportItems
    """
    reportItemIds: [ID!]

    """
    To report month
    """
    toMonth: Int!

    """
    To report year
    """
    toYear: Int!

    """
    User IDs
    """
    userIds: [ID!]!
  ): UserMonthlyReport!

  """
  Get Users
  """
  users(
    """
    Group ID
    """
    groupId: ID

    """
    Report date to filter daily_inputs
    """
    reportDate: ISO8601Date

    """
    Report dates to filter daily_inputs
    """
    reportDates: [ISO8601Date!]
  ): [User!]!
}

type ReportItem {
  createdAt: ISO8601DateTime!
  dailyInputs: [DailyInput!]
  displayType: DisplayTypeEnum!
  forecastFormula: String
  formula: String
  group: Group!
  hasForecast: Boolean!
  hasTarget: Boolean!
  id: ID!
  isCalculation: Boolean!
  monthlyTargets: [MonthlyTarget!]
  name: String!
  reportType: ReportTypeEnum!
  updatedAt: ISO8601DateTime!
}

"""
Attributes for updating a ReportItem
"""
input ReportItemAttributes {
  """
  ReportItem display type
  """
  displayType: Int

  """
  ReportItem forcast formula
  """
  forecastFormula: String

  """
  ReportItem formula
  """
  formula: String

  """
  ReportItem has forcast
  """
  hasForecast: Boolean

  """
  ReportItem has target
  """
  hasTarget: Boolean

  """
  ReportItem ID
  """
  id: ID!

  """
  Is calculation
  """
  isCalculation: Boolean

  """
  ReportItem name
  """
  name: String
}

enum ReportTypeEnum {
  business_person_days
  contract_rate
  custom
  forecast_sales_rank_a
  forecast_sales_rank_b
  forecast_sales_rank_c
  forecast_sales_rank_d
  forecast_sales_rank_e
  number_of_complete_opportunity
  number_of_contract
  number_of_lead_rank_a
  number_of_lead_rank_b
  number_of_lead_rank_c
  number_of_lead_rank_d
  number_of_lead_rank_e
  number_of_remaining_opportunity
  sales
  unit_contract_price
}

"""
Autogenerated input type of UpdateDailyComment
"""
input UpdateDailyCommentInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  reportDate: ISO8601Date!
  userId: ID!
}

"""
Autogenerated return type of UpdateDailyComment
"""
type UpdateDailyCommentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dailyComment: DailyComment!
}

"""
Autogenerated input type of UpdateDailyInputs
"""
input UpdateDailyInputsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  objects: [DailyInputAttributes!]!
}

"""
Autogenerated return type of UpdateDailyInputs
"""
type UpdateDailyInputsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dailyInputs: [DailyInput!]!
}

"""
Autogenerated input type of UpdateGroupDayOffs
"""
input UpdateGroupDayOffsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  objects: [GroupDayOffAttributes!]!
}

"""
Autogenerated return type of UpdateGroupDayOffs
"""
type UpdateGroupDayOffsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  groupDayOffs: [GroupDayOff!]!
}

"""
Autogenerated input type of UpdateGroup
"""
input UpdateGroupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  object: GroupAttributes!
}

"""
Autogenerated return type of UpdateGroup
"""
type UpdateGroupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  group: Group!
}

"""
Autogenerated input type of UpdateMonthlySetting
"""
input UpdateMonthlySettingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  object: MonthlySettingAttributes!
}

"""
Autogenerated return type of UpdateMonthlySetting
"""
type UpdateMonthlySettingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  monthlySetting: MonthlySetting!
}

"""
Autogenerated input type of UpdateMonthlyTargets
"""
input UpdateMonthlyTargetsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  objects: [MonthlyTargetAttributes!]!
}

"""
Autogenerated return type of UpdateMonthlyTargets
"""
type UpdateMonthlyTargetsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  monthlyTargets: [MonthlyTarget!]!
}

"""
Autogenerated input type of UpdateReportItems
"""
input UpdateReportItemsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  objects: [ReportItemAttributes!]!
}

"""
Autogenerated return type of UpdateReportItems
"""
type UpdateReportItemsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  reportItems: [ReportItem!]!
}

"""
Autogenerated input type of UpdateUserDayOffs
"""
input UpdateUserDayOffsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  objects: [UserDayOffAttributes!]!
}

"""
Autogenerated return type of UpdateUserDayOffs
"""
type UpdateUserDayOffsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userDayOffs: [UserDayOff!]!
}

"""
Autogenerated input type of UpdateUser
"""
input UpdateUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  object: UserAttributes!
}

"""
Autogenerated return type of UpdateUser
"""
type UpdateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type User {
  createdAt: ISO8601DateTime!
  dailyInputs: [DailyInput!]
  email: String
  fridayIsDayOff: Boolean!
  group: Group!
  hasDayOffSettings: Boolean!
  id: ID!
  mondayIsDayOff: Boolean!
  name: String!
  publicHolidayIsDayOff: Boolean!
  saturdayIsDayOff: Boolean!
  sundayIsDayOff: Boolean!
  thursdayIsDayOff: Boolean!
  tuesdayIsDayOff: Boolean!
  updatedAt: ISO8601DateTime!
  wednesdayIsDayOff: Boolean!
}

"""
Attributes for updating a User
"""
input UserAttributes {
  fridayIsDayOff: Boolean
  hasDayOffSettings: Boolean

  """
  User ID
  """
  id: ID!
  mondayIsDayOff: Boolean

  """
  User name
  """
  name: String
  publicHolidayIsDayOff: Boolean
  saturdayIsDayOff: Boolean
  sundayIsDayOff: Boolean
  thursdayIsDayOff: Boolean
  tuesdayIsDayOff: Boolean
  wednesdayIsDayOff: Boolean
}

type UserBusinessDay {
  date: ISO8601Date!
  isDayOff: Boolean!
  note: String
}

type UserDailyReport {
  dailyTargetValues: JSON!
  forecastValues: JSON!
  reportDates: [ISO8601Date!]!
  reportItems: [ReportItem!]!
  reportValues: JSON!
  targetValues: JSON!
  users: [User!]!
}

type UserDayOff {
  createdAt: ISO8601DateTime!
  id: ID!
  isDayOff: Boolean!
  note: String
  reportDate: ISO8601Date!
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
Attributes for creating or updating a UserDayOff
"""
input UserDayOffAttributes {
  """
  Is day off
  """
  isDayOff: Boolean!

  """
  Note
  """
  note: String

  """
  Reporting date
  """
  reportDate: ISO8601Date!

  """
  User ID
  """
  userId: ID!
}

type UserMonthlyReport {
  forecastValues: JSON!
  reportDates: [ISO8601Date!]!
  reportItems: [ReportItem!]!
  reportValues: JSON!
  targetValues: JSON!
  users: [User!]!
}